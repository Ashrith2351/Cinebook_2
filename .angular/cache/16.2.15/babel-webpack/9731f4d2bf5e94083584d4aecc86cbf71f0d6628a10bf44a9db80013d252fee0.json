{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookTicketsComponent = class BookTicketsComponent {\n  constructor(router) {\n    this.router = router;\n    this.selectedCinema = 'AAA Cinemas: Ameerpet'; // Hardcoded for now, can be dynamic\n    this.selectedDate = new Date(); // Hardcoded for now, can be dynamic\n    this.selectedShowtime = null;\n    this.showtimes = ['04:50 AM', '08:45 AM', '09:05 AM', '11:25 AM', '12:25 PM', '02:45 PM'];\n    this.selectedSeats = [];\n    // Seat map with seat booking status\n    this.seatMap = [[{\n      number: 'A1',\n      booked: false\n    }, {\n      number: 'A2',\n      booked: false\n    }, {\n      number: 'A3',\n      booked: true\n    }, {\n      number: 'A4',\n      booked: false\n    }], [{\n      number: 'B1',\n      booked: false\n    }, {\n      number: 'B2',\n      booked: true\n    }, {\n      number: 'B3',\n      booked: false\n    }, {\n      number: 'B4',\n      booked: false\n    }], [{\n      number: 'C1',\n      booked: true\n    }, {\n      number: 'C2',\n      booked: false\n    }, {\n      number: 'C3',\n      booked: false\n    }, {\n      number: 'C4',\n      booked: false\n    }]\n    // Add more rows if necessary\n    ];\n\n    this.selectedSeats = [];\n  }\n  ngOnInit() {\n    // Retrieve movie data from state passed from the previous component\n    this.movie = history.state.movie;\n  }\n  onSelectShowtime(showtime) {\n    this.selectedShowtime = showtime;\n  }\n  onSelectSeat(seat) {\n    if (!seat.booked && !this.selectedSeats.includes(seat)) {\n      this.selectedSeats.push(seat);\n    } else {\n      this.selectedSeats = this.selectedSeats.filter(s => s !== seat);\n    }\n  }\n  confirmBooking() {\n    // Handle booking confirmation logic here\n    alert(`Booking confirmed for ${this.movie.title} at ${this.selectedCinema}, ${this.selectedShowtime} for seats ${this.selectedSeats.map(seat => seat.number).join(', ')}`);\n  }\n};\nBookTicketsComponent = __decorate([Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.css']\n})], BookTicketsComponent);","map":{"version":3,"names":["Component","BookTicketsComponent","constructor","router","selectedCinema","selectedDate","Date","selectedShowtime","showtimes","selectedSeats","seatMap","number","booked","ngOnInit","movie","history","state","onSelectShowtime","showtime","onSelectSeat","seat","includes","push","filter","s","confirmBooking","alert","title","map","join","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\book-tickets\\book-tickets.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.css']\n})\nexport class BookTicketsComponent implements OnInit {\n\n  movie: any;\n  selectedCinema = 'AAA Cinemas: Ameerpet'; // Hardcoded for now, can be dynamic\n  selectedDate = new Date(); // Hardcoded for now, can be dynamic\n  selectedShowtime: string | null = null;\n  showtimes = ['04:50 AM', '08:45 AM', '09:05 AM', '11:25 AM', '12:25 PM', '02:45 PM'];\n  selectedSeats: any[] = [];\n\n  // Seat map with seat booking status\n  seatMap = [\n    [{ number: 'A1', booked: false }, { number: 'A2', booked: false }, { number: 'A3', booked: true }, { number: 'A4', booked: false }],\n    [{ number: 'B1', booked: false }, { number: 'B2', booked: true }, { number: 'B3', booked: false }, { number: 'B4', booked: false }],\n    [{ number: 'C1', booked: true }, { number: 'C2', booked: false }, { number: 'C3', booked: false }, { number: 'C4', booked: false }],\n    // Add more rows if necessary\n  ];\n\n  selectedSeats: any[] = [];\n\n  constructor(private router: Router) {}\n\n  ngOnInit(): void {\n    // Retrieve movie data from state passed from the previous component\n    this.movie = history.state.movie;\n  }\n\n  onSelectShowtime(showtime: string) {\n    this.selectedShowtime = showtime;\n  }\n\n  onSelectSeat(seat: any) {\n    if (!seat.booked && !this.selectedSeats.includes(seat)) {\n      this.selectedSeats.push(seat);\n    } else {\n      this.selectedSeats = this.selectedSeats.filter(s => s !== seat);\n    }\n  }\n\n  confirmBooking() {\n    // Handle booking confirmation logic here\n    alert(`Booking confirmed for ${this.movie.title} at ${this.selectedCinema}, ${this.selectedShowtime} for seats ${this.selectedSeats.map(seat => seat.number).join(', ')}`);\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAmB/BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAhB1B,KAAAC,cAAc,GAAG,uBAAuB,CAAC,CAAC;IAC1C,KAAAC,YAAY,GAAG,IAAIC,IAAI,EAAE,CAAC,CAAC;IAC3B,KAAAC,gBAAgB,GAAkB,IAAI;IACtC,KAAAC,SAAS,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;IACpF,KAAAC,aAAa,GAAU,EAAE;IAEzB;IACA,KAAAC,OAAO,GAAG,CACR,CAAC;MAAEC,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,CAAC,EACnI,CAAC;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,CAAC,EACnI,CAAC;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE,EAAE;MAAED,MAAM,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAE;IAClI;IAAA,CACD;;IAED,KAAAH,aAAa,GAAU,EAAE;EAEY;EAErCI,QAAQA,CAAA;IACN;IACA,IAAI,CAACC,KAAK,GAAGC,OAAO,CAACC,KAAK,CAACF,KAAK;EAClC;EAEAG,gBAAgBA,CAACC,QAAgB;IAC/B,IAAI,CAACX,gBAAgB,GAAGW,QAAQ;EAClC;EAEAC,YAAYA,CAACC,IAAS;IACpB,IAAI,CAACA,IAAI,CAACR,MAAM,IAAI,CAAC,IAAI,CAACH,aAAa,CAACY,QAAQ,CAACD,IAAI,CAAC,EAAE;MACtD,IAAI,CAACX,aAAa,CAACa,IAAI,CAACF,IAAI,CAAC;KAC9B,MAAM;MACL,IAAI,CAACX,aAAa,GAAG,IAAI,CAACA,aAAa,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,IAAI,CAAC;;EAEnE;EAEAK,cAAcA,CAAA;IACZ;IACAC,KAAK,CAAC,yBAAyB,IAAI,CAACZ,KAAK,CAACa,KAAK,OAAO,IAAI,CAACvB,cAAc,KAAK,IAAI,CAACG,gBAAgB,cAAc,IAAI,CAACE,aAAa,CAACmB,GAAG,CAACR,IAAI,IAAIA,IAAI,CAACT,MAAM,CAAC,CAACkB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;EAC5K;CACD;AA1CY5B,oBAAoB,GAAA6B,UAAA,EALhC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWhC,oBAAoB,CA0ChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}