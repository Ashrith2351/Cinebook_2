{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookTicketsComponent = class BookTicketsComponent {\n  constructor(router, route) {\n    this.router = router;\n    this.route = route;\n    this.selectedShowtime = ''; // Initialize the showtime as empty by default\n    this.currentDate = new Date(); // Get the current date\n    this.selectedDate = this.currentDate;\n    this.movieTheaters = [{\n      name: \"AAA Cinemas: Ameerpet\",\n      timings: [\"10:00 AM\", \"01:00 PM\", \"04:00 PM\", \"07:00 PM\"]\n    }, {\n      name: \"Pratap Theatre: Langer House\",\n      timings: [\"09:00 AM\", \"12:00 PM\", \"03:00 PM\", \"06:00 PM\"]\n    }, {\n      name: \"AMB Cinemas: Gachibowli\",\n      timings: [\"11:00 AM\", \"02:00 PM\", \"05:00 PM\", \"08:00 PM\"]\n    }];\n  }\n  ngOnInit() {\n    // Ensure that the selected movie is fetched from the navigation state\n    const navigation = this.router.getCurrentNavigation();\n    this.movie = navigation?.extras.state?.movie;\n    // Set the default showtime if needed, otherwise can be set dynamically\n    this.selectedShowtime = this.movieTheaters[0]?.timings[0];\n  }\n  onSelectShowtime(showtime) {\n    this.selectedShowtime = showtime;\n  }\n  // To handle further redirection if needed\n  onProceedToSeats() {\n    this.router.navigate(['/seat-selection'], {\n      state: {\n        movie: this.movie,\n        showtime: this.selectedShowtime\n      }\n    });\n  }\n};\nBookTicketsComponent = __decorate([Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.css']\n})], BookTicketsComponent);","map":{"version":3,"names":["Component","BookTicketsComponent","constructor","router","route","selectedShowtime","currentDate","Date","selectedDate","movieTheaters","name","timings","ngOnInit","navigation","getCurrentNavigation","movie","extras","state","onSelectShowtime","showtime","onProceedToSeats","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\book-tickets\\book-tickets.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.css']\n})\nexport class BookTicketsComponent implements OnInit {\n\n  movie: any;\n  selectedShowtime: string = ''; // Initialize the showtime as empty by default\n  currentDate: Date = new Date(); // Get the current date\n  selectedDate: Date = this.currentDate;\n\n  movieTheaters = [\n    { \n      name: \"AAA Cinemas: Ameerpet\", \n      timings: [\"10:00 AM\", \"01:00 PM\", \"04:00 PM\", \"07:00 PM\"]\n    },\n    { \n      name: \"Pratap Theatre: Langer House\", \n      timings: [\"09:00 AM\", \"12:00 PM\", \"03:00 PM\", \"06:00 PM\"]\n    },\n    { \n      name: \"AMB Cinemas: Gachibowli\", \n      timings: [\"11:00 AM\", \"02:00 PM\", \"05:00 PM\", \"08:00 PM\"]\n    }\n  ];\n\n  constructor(private router: Router, private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    // Ensure that the selected movie is fetched from the navigation state\n    const navigation = this.router.getCurrentNavigation();\n    this.movie = navigation?.extras.state?.movie;\n\n    // Set the default showtime if needed, otherwise can be set dynamically\n    this.selectedShowtime = this.movieTheaters[0]?.timings[0];\n  }\n\n  onSelectShowtime(showtime: string): void {\n    this.selectedShowtime = showtime;\n  }\n\n  // To handle further redirection if needed\n  onProceedToSeats() {\n    this.router.navigate(['/seat-selection'], { state: { movie: this.movie, showtime: this.selectedShowtime } });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAsB/BC,YAAoBC,MAAc,EAAUC,KAAqB;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAnBjD,KAAAC,gBAAgB,GAAW,EAAE,CAAC,CAAC;IAC/B,KAAAC,WAAW,GAAS,IAAIC,IAAI,EAAE,CAAC,CAAC;IAChC,KAAAC,YAAY,GAAS,IAAI,CAACF,WAAW;IAErC,KAAAG,aAAa,GAAG,CACd;MACEC,IAAI,EAAE,uBAAuB;MAC7BC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;KACzD,EACD;MACED,IAAI,EAAE,8BAA8B;MACpCC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;KACzD,EACD;MACED,IAAI,EAAE,yBAAyB;MAC/BC,OAAO,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU;KACzD,CACF;EAEmE;EAEpEC,QAAQA,CAAA;IACN;IACA,MAAMC,UAAU,GAAG,IAAI,CAACV,MAAM,CAACW,oBAAoB,EAAE;IACrD,IAAI,CAACC,KAAK,GAAGF,UAAU,EAAEG,MAAM,CAACC,KAAK,EAAEF,KAAK;IAE5C;IACA,IAAI,CAACV,gBAAgB,GAAG,IAAI,CAACI,aAAa,CAAC,CAAC,CAAC,EAAEE,OAAO,CAAC,CAAC,CAAC;EAC3D;EAEAO,gBAAgBA,CAACC,QAAgB;IAC/B,IAAI,CAACd,gBAAgB,GAAGc,QAAQ;EAClC;EAEA;EACAC,gBAAgBA,CAAA;IACd,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE;MAAEJ,KAAK,EAAE;QAAEF,KAAK,EAAE,IAAI,CAACA,KAAK;QAAEI,QAAQ,EAAE,IAAI,CAACd;MAAgB;IAAE,CAAE,CAAC;EAC9G;CACD;AAzCYJ,oBAAoB,GAAAqB,UAAA,EALhCtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWxB,oBAAoB,CAyChC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}