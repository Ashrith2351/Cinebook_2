{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let MovieDetailsComponent = class MovieDetailsComponent {\n  constructor(route,\n  // For handling route parameters\n  movieService,\n  // For fetching movie data\n  router // Inject Router for navigation\n  ,\n  // Inject Router for navigation\n  navigationService) {\n    this.route = route;\n    this.movieService = movieService;\n    this.router = router;\n    this.navigationService = navigationService;\n  }\n  ngOnInit() {\n    // Get the movie ID from the route and handle null or undefined cases\n    const movieId = this.route.snapshot.paramMap.get('id');\n    // Ensure the movieId is not null or undefined before using it\n    if (movieId !== null) {\n      const movieIndex = +movieId; // Convert movieId to number (array index)\n      // Fetch movie details based on the movie ID from the JSON file\n      this.movieService.getMovies().subscribe(movies => {\n        if (movies && movieIndex >= 0 && movieIndex < movies.length) {\n          this.movie = movies[movieIndex]; // Fetch the movie using the index\n        }\n      });\n    }\n  }\n\n  onBookTickets() {\n    // Navigate to the booking page (showtime and seat selection)\n    this.router.navigate(['/book-tickets'], {\n      state: {\n        movie: this.movie\n      }\n    });\n  }\n};\nMovieDetailsComponent = __decorate([Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})], MovieDetailsComponent);","map":{"version":3,"names":["Component","MovieDetailsComponent","constructor","route","movieService","router","navigationService","ngOnInit","movieId","snapshot","paramMap","get","movieIndex","getMovies","subscribe","movies","length","movie","onBookTickets","navigate","state","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\movie-details\\movie-details.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router'; // Import Router for navigation\nimport { MovieService } from '../services/movie.service'; // Import MovieService for fetching movie details\nimport { NavigationService } from './services/navigation.service';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})\nexport class MovieDetailsComponent implements OnInit {\n\n  movie: any; // Holds the movie details\n\n  constructor(\n    private route: ActivatedRoute, // For handling route parameters\n    private movieService: MovieService, // For fetching movie data\n    private router: Router // Inject Router for navigation\n    private navigationService: NavigationService\n  ) {}\n\n  ngOnInit(): void {\n    // Get the movie ID from the route and handle null or undefined cases\n    const movieId = this.route.snapshot.paramMap.get('id');\n    \n    // Ensure the movieId is not null or undefined before using it\n    if (movieId !== null) {\n      const movieIndex = +movieId; // Convert movieId to number (array index)\n\n      // Fetch movie details based on the movie ID from the JSON file\n      this.movieService.getMovies().subscribe((movies: any[]) => {\n        if (movies && movieIndex >= 0 && movieIndex < movies.length) {\n          this.movie = movies[movieIndex]; // Fetch the movie using the index\n        }\n      });\n    }\n  }\n\n  onBookTickets() {\n    // Navigate to the booking page (showtime and seat selection)\n    this.router.navigate(['/book-tickets'], { state: { movie: this.movie } });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAIhCC,YACUC,KAAqB;EAAE;EACvBC,YAA0B;EAAE;EAC5BC,MAAc,CAAC;EAAA;EAAA;EACfC,iBAAoC;IAHpC,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,iBAAiB,GAAjBA,iBAAiB;EACxB;EAEHC,QAAQA,CAAA;IACN;IACA,MAAMC,OAAO,GAAG,IAAI,CAACL,KAAK,CAACM,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IAEtD;IACA,IAAIH,OAAO,KAAK,IAAI,EAAE;MACpB,MAAMI,UAAU,GAAG,CAACJ,OAAO,CAAC,CAAC;MAE7B;MACA,IAAI,CAACJ,YAAY,CAACS,SAAS,EAAE,CAACC,SAAS,CAAEC,MAAa,IAAI;QACxD,IAAIA,MAAM,IAAIH,UAAU,IAAI,CAAC,IAAIA,UAAU,GAAGG,MAAM,CAACC,MAAM,EAAE;UAC3D,IAAI,CAACC,KAAK,GAAGF,MAAM,CAACH,UAAU,CAAC,CAAC,CAAC;;MAErC,CAAC,CAAC;;EAEN;;EAEAM,aAAaA,CAAA;IACX;IACA,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,eAAe,CAAC,EAAE;MAAEC,KAAK,EAAE;QAAEH,KAAK,EAAE,IAAI,CAACA;MAAK;IAAE,CAAE,CAAC;EAC3E;CACD;AAhCYhB,qBAAqB,GAAAoB,UAAA,EALjCrB,SAAS,CAAC;EACTsB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWvB,qBAAqB,CAgCjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}