{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let BookTicketsComponent = class BookTicketsComponent {\n  constructor(router, route, location, cinemaService) {\n    this.router = router;\n    this.route = route;\n    this.location = location;\n    this.cinemaService = cinemaService;\n    this.cinemas = [];\n    this.selectedDate = new Date();\n    this.selectedShowtime = '';\n    this.dates = [];\n    const navigation = this.router.getCurrentNavigation();\n    this.movie = navigation?.extras.state ? navigation.extras.state['movie'] : null;\n  }\n  ngOnInit() {\n    this.generateWeekDates();\n    this.loadCinemas();\n  }\n  generateWeekDates() {\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(this.selectedDate.getDate() + i);\n      this.dates.push(date);\n    }\n  }\n  loadCinemas() {\n    this.cinemaService.getCinemas().subscribe(data => {\n      this.cinemas = data;\n    }, error => {\n      console.error('Error fetching cinemas:', error);\n    });\n  }\n  selectDate(date) {\n    this.selectedDate = date;\n  }\n  selectShowtime(showtime) {\n    this.selectedShowtime = showtime;\n    this.navigateToSeatSelection();\n  }\n  navigateToSeatSelection() {\n    const navigationExtras = {\n      state: {\n        movie: this.movie,\n        date: this.selectedDate,\n        showtime: this.selectedShowtime\n      }\n    };\n    this.router.navigate(['/seat-selection'], navigationExtras);\n  }\n  goBack() {\n    this.location.back();\n  }\n};\nBookTicketsComponent = __decorate([Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.css']\n})], BookTicketsComponent);","map":{"version":3,"names":["Component","BookTicketsComponent","constructor","router","route","location","cinemaService","cinemas","selectedDate","Date","selectedShowtime","dates","navigation","getCurrentNavigation","movie","extras","state","ngOnInit","generateWeekDates","loadCinemas","i","date","setDate","getDate","push","getCinemas","subscribe","data","error","console","selectDate","selectShowtime","showtime","navigateToSeatSelection","navigationExtras","navigate","goBack","back","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\book-tickets\\book-tickets.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router, NavigationExtras, Location } from '@angular/router';\nimport { CinemaService } from '../services/cinema.service';  // Make sure the path is correct based on your project structure\n\n@Component({\n  selector: 'app-book-tickets',\n  templateUrl: './book-tickets.component.html',\n  styleUrls: ['./book-tickets.component.css']\n})\nexport class BookTicketsComponent implements OnInit {\n  movie: any;\n  cinemas: any[] = [];\n  selectedDate: Date = new Date();\n  selectedShowtime: string = '';\n  dates: Date[] = [];\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private location: Location,\n    private cinemaService: CinemaService\n  ) {\n    const navigation = this.router.getCurrentNavigation();\n    this.movie = navigation?.extras.state ? navigation.extras.state['movie'] : null;\n  }\n\n  ngOnInit(): void {\n    this.generateWeekDates();\n    this.loadCinemas();\n  }\n\n  generateWeekDates() {\n    for (let i = 0; i < 7; i++) {\n      const date = new Date();\n      date.setDate(this.selectedDate.getDate() + i);\n      this.dates.push(date);\n    }\n  }\n\n  loadCinemas() {\n    this.cinemaService.getCinemas().subscribe(data => {\n      this.cinemas = data;\n    }, error => {\n      console.error('Error fetching cinemas:', error);\n    });\n  }\n\n  selectDate(date: Date) {\n    this.selectedDate = date;\n  }\n\n  selectShowtime(showtime: string) {\n    this.selectedShowtime = showtime;\n    this.navigateToSeatSelection();\n  }\n\n  navigateToSeatSelection() {\n    const navigationExtras: NavigationExtras = {\n      state: {\n        movie: this.movie,\n        date: this.selectedDate,\n        showtime: this.selectedShowtime\n      }\n    };\n    this.router.navigate(['/seat-selection'], navigationExtras);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAO/BC,YACUC,MAAc,EACdC,KAAqB,EACrBC,QAAkB,EAClBC,aAA4B;IAH5B,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,aAAa,GAAbA,aAAa;IATvB,KAAAC,OAAO,GAAU,EAAE;IACnB,KAAAC,YAAY,GAAS,IAAIC,IAAI,EAAE;IAC/B,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,KAAK,GAAW,EAAE;IAQhB,MAAMC,UAAU,GAAG,IAAI,CAACT,MAAM,CAACU,oBAAoB,EAAE;IACrD,IAAI,CAACC,KAAK,GAAGF,UAAU,EAAEG,MAAM,CAACC,KAAK,GAAGJ,UAAU,CAACG,MAAM,CAACC,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI;EACjF;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAD,iBAAiBA,CAAA;IACf,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,IAAI,GAAG,IAAIZ,IAAI,EAAE;MACvBY,IAAI,CAACC,OAAO,CAAC,IAAI,CAACd,YAAY,CAACe,OAAO,EAAE,GAAGH,CAAC,CAAC;MAC7C,IAAI,CAACT,KAAK,CAACa,IAAI,CAACH,IAAI,CAAC;;EAEzB;EAEAF,WAAWA,CAAA;IACT,IAAI,CAACb,aAAa,CAACmB,UAAU,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC/C,IAAI,CAACpB,OAAO,GAAGoB,IAAI;IACrB,CAAC,EAAEC,KAAK,IAAG;MACTC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACJ;EAEAE,UAAUA,CAACT,IAAU;IACnB,IAAI,CAACb,YAAY,GAAGa,IAAI;EAC1B;EAEAU,cAAcA,CAACC,QAAgB;IAC7B,IAAI,CAACtB,gBAAgB,GAAGsB,QAAQ;IAChC,IAAI,CAACC,uBAAuB,EAAE;EAChC;EAEAA,uBAAuBA,CAAA;IACrB,MAAMC,gBAAgB,GAAqB;MACzClB,KAAK,EAAE;QACLF,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBO,IAAI,EAAE,IAAI,CAACb,YAAY;QACvBwB,QAAQ,EAAE,IAAI,CAACtB;;KAElB;IACD,IAAI,CAACP,MAAM,CAACgC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAED,gBAAgB,CAAC;EAC7D;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAAC/B,QAAQ,CAACgC,IAAI,EAAE;EACtB;CACD;AA7DYpC,oBAAoB,GAAAqC,UAAA,EALhCtC,SAAS,CAAC;EACTuC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACWxC,oBAAoB,CA6DhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}