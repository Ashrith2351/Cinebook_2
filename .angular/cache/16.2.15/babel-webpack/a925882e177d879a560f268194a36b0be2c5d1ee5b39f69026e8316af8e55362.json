{"ast":null,"code":"import { __decorate } from \"tslib\";\nexport let SeatSelectionComponent = class SeatSelectionComponent {\n  constructor(router, route, location) {\n    this.router = router;\n    this.route = route;\n    this.location = location;\n    this.seatMap = [];\n    this.selectedSeats = [];\n    this.initializeNavigationState();\n    // Assuming this needs adjustment based on new data structure\n  }\n\n  ngOnInit() {}\n  initializeNavigationState() {\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation && navigation.extras && navigation.extras.state) {\n      const state = navigation.extras.state;\n      this.movie = state.movie;\n      this.cinema = state.cinema;\n      this.date = state.date;\n      this.showtime = state.showtime;\n    }\n  }\n  isSelectedSeat(categoryIndex, rowIndex, seatIndex) {\n    return !!this.selectedSeats.find(s => s.categoryIndex === categoryIndex && s.rowIndex === rowIndex && s.colIndex === seatIndex);\n  }\n  toggleSeat(categoryIndex, rowIndex, seatIndex) {\n    let seat = this.cinema.categories[categoryIndex].rows[rowIndex].seats[seatIndex];\n    if (seat.booked) return;\n    let seatFound = this.selectedSeats.find(s => s.categoryIndex === categoryIndex && s.rowIndex === rowIndex && s.colIndex === seatIndex);\n    if (seatFound) {\n      this.selectedSeats = this.selectedSeats.filter(s => s !== seatFound);\n    } else {\n      this.selectedSeats.push({\n        categoryIndex,\n        rowIndex,\n        colIndex: seatIndex\n      });\n    }\n  }\n  confirmSelection() {\n    // Process selection confirmation\n    console.log('Selected seats:', this.selectedSeats);\n    this.router.navigate(['/confirmation']);\n  }\n  goBack() {\n    this.location.back();\n  }\n};\nSeatSelectionComponent = __decorate([Component({\n  selector: 'app-seat-selection',\n  templateUrl: './seat-selection.component.html',\n  styleUrls: ['./seat-selection.component.css']\n})], SeatSelectionComponent);","map":{"version":3,"names":["SeatSelectionComponent","constructor","router","route","location","seatMap","selectedSeats","initializeNavigationState","ngOnInit","navigation","getCurrentNavigation","extras","state","movie","cinema","date","showtime","isSelectedSeat","categoryIndex","rowIndex","seatIndex","find","s","colIndex","toggleSeat","seat","categories","rows","seats","booked","seatFound","filter","push","confirmSelection","console","log","navigate","goBack","back","__decorate","Component","selector","templateUrl","styleUrls"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\seat-selection\\seat-selection.component.ts"],"sourcesContent":["interface Movie {\n  title: string;\n}\n\ninterface Cinema {\n  name: string;\n  categories: Category[];  // Adding categories here\n}\n\ninterface Category {\n  name: string;\n  rows: Row[];\n}\n\ninterface Row {\n  seats: Seat[];\n}\n\ninterface Seat {\n  booked: boolean;\n  label: string;\n}\n\n@Component({\n  selector: 'app-seat-selection',\n  templateUrl: './seat-selection.component.html',\n  styleUrls: ['./seat-selection.component.css']\n})\nexport class SeatSelectionComponent implements OnInit {\n  movie!: Movie;\n  cinema!: Cinema;\n  date!: Date;\n  showtime!: string;\n  seatMap: Seat[][] = [];\n  selectedSeats: { categoryIndex: number, rowIndex: number, colIndex: number }[] = [];\n\n  constructor(private router: Router, private route: ActivatedRoute, private location: Location) {\n    this.initializeNavigationState();\n    // Assuming this needs adjustment based on new data structure\n  }\n\n  ngOnInit(): void {}\n\n  initializeNavigationState() {\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation && navigation.extras && navigation.extras.state) {\n      const state = navigation.extras.state as any;\n      this.movie = state.movie;\n      this.cinema = state.cinema;\n      this.date = state.date;\n      this.showtime = state.showtime;\n    }\n  }\n\n  isSelectedSeat(categoryIndex: number, rowIndex: number, seatIndex: number): boolean {\n    return !!this.selectedSeats.find(s => s.categoryIndex === categoryIndex && s.rowIndex === rowIndex && s.colIndex === seatIndex);\n  }\n\n  toggleSeat(categoryIndex: number, rowIndex: number, seatIndex: number): void {\n    let seat = this.cinema.categories[categoryIndex].rows[rowIndex].seats[seatIndex];\n    if (seat.booked) return;\n\n    let seatFound = this.selectedSeats.find(s => s.categoryIndex === categoryIndex && s.rowIndex === rowIndex && s.colIndex === seatIndex);\n    if (seatFound) {\n      this.selectedSeats = this.selectedSeats.filter(s => s !== seatFound);\n    } else {\n      this.selectedSeats.push({ categoryIndex, rowIndex, colIndex: seatIndex });\n    }\n  }\n\n  confirmSelection(): void {\n    // Process selection confirmation\n    console.log('Selected seats:', this.selectedSeats);\n    this.router.navigate(['/confirmation']);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n"],"mappings":";AA4BO,WAAMA,sBAAsB,GAA5B,MAAMA,sBAAsB;EAQjCC,YAAoBC,MAAc,EAAUC,KAAqB,EAAUC,QAAkB;IAAzE,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IAA0B,KAAAC,QAAQ,GAARA,QAAQ;IAHnF,KAAAC,OAAO,GAAa,EAAE;IACtB,KAAAC,aAAa,GAAoE,EAAE;IAGjF,IAAI,CAACC,yBAAyB,EAAE;IAChC;EACF;;EAEAC,QAAQA,CAAA,GAAU;EAElBD,yBAAyBA,CAAA;IACvB,MAAME,UAAU,GAAG,IAAI,CAACP,MAAM,CAACQ,oBAAoB,EAAE;IACrD,IAAID,UAAU,IAAIA,UAAU,CAACE,MAAM,IAAIF,UAAU,CAACE,MAAM,CAACC,KAAK,EAAE;MAC9D,MAAMA,KAAK,GAAGH,UAAU,CAACE,MAAM,CAACC,KAAY;MAC5C,IAAI,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK;MACxB,IAAI,CAACC,MAAM,GAAGF,KAAK,CAACE,MAAM;MAC1B,IAAI,CAACC,IAAI,GAAGH,KAAK,CAACG,IAAI;MACtB,IAAI,CAACC,QAAQ,GAAGJ,KAAK,CAACI,QAAQ;;EAElC;EAEAC,cAAcA,CAACC,aAAqB,EAAEC,QAAgB,EAAEC,SAAiB;IACvE,OAAO,CAAC,CAAC,IAAI,CAACd,aAAa,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,aAAa,KAAKA,aAAa,IAAII,CAAC,CAACH,QAAQ,KAAKA,QAAQ,IAAIG,CAAC,CAACC,QAAQ,KAAKH,SAAS,CAAC;EACjI;EAEAI,UAAUA,CAACN,aAAqB,EAAEC,QAAgB,EAAEC,SAAiB;IACnE,IAAIK,IAAI,GAAG,IAAI,CAACX,MAAM,CAACY,UAAU,CAACR,aAAa,CAAC,CAACS,IAAI,CAACR,QAAQ,CAAC,CAACS,KAAK,CAACR,SAAS,CAAC;IAChF,IAAIK,IAAI,CAACI,MAAM,EAAE;IAEjB,IAAIC,SAAS,GAAG,IAAI,CAACxB,aAAa,CAACe,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACJ,aAAa,KAAKA,aAAa,IAAII,CAAC,CAACH,QAAQ,KAAKA,QAAQ,IAAIG,CAAC,CAACC,QAAQ,KAAKH,SAAS,CAAC;IACtI,IAAIU,SAAS,EAAE;MACb,IAAI,CAACxB,aAAa,GAAG,IAAI,CAACA,aAAa,CAACyB,MAAM,CAACT,CAAC,IAAIA,CAAC,KAAKQ,SAAS,CAAC;KACrE,MAAM;MACL,IAAI,CAACxB,aAAa,CAAC0B,IAAI,CAAC;QAAEd,aAAa;QAAEC,QAAQ;QAAEI,QAAQ,EAAEH;MAAS,CAAE,CAAC;;EAE7E;EAEAa,gBAAgBA,CAAA;IACd;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC7B,aAAa,CAAC;IAClD,IAAI,CAACJ,MAAM,CAACkC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACjC,QAAQ,CAACkC,IAAI,EAAE;EACtB;CACD;AAnDYtC,sBAAsB,GAAAuC,UAAA,EALlCC,SAAS,CAAC;EACTC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACW3C,sBAAsB,CAmDlC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}