{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CinemaService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'assets/cinemas.json'; // Path to your JSON file\n  }\n\n  getCinemas() {\n    return this.http.get(this.url);\n  }\n  static #_ = this.ɵfac = function CinemaService_Factory(t) {\n    return new (t || CinemaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CinemaService,\n    factory: CinemaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CinemaService","constructor","http","url","getCinemas","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\services\\cinema.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CinemaService {\n  private url = 'assets/cinemas.json'; // Path to your JSON file\n\n  constructor(private http: HttpClient) { }\n\n  getCinemas(): Observable<any> {\n    return this.http.get(this.url);\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,GAAG,GAAG,qBAAqB,CAAC,CAAC;EAEG;;EAExCC,UAAUA,CAAA;IACR,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,IAAI,CAACF,GAAG,CAAC;EAChC;EAAC,QAAAG,CAAA,G;qBAPUN,aAAa,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbX,aAAa;IAAAY,OAAA,EAAbZ,aAAa,CAAAa,IAAA;IAAAC,UAAA,EAFZ;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}