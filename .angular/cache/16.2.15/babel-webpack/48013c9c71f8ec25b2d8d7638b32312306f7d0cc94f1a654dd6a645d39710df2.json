{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.moviesUrl = 'assets/movies.json';\n  }\n  getMovies() {\n    return this.http.get(this.moviesUrl);\n  }\n  getMovieById(id) {\n    return this.getMovies().pipe(map(movies => movies.find(movie => movie.id === id)) // Assuming each movie has a unique 'id' property\n    );\n  }\n  static #_ = this.ɵfac = function MovieService_Factory(t) {\n    return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MovieService,\n    factory: MovieService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MovieService","constructor","http","moviesUrl","getMovies","get","getMovieById","id","pipe","map","movies","find","movie","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../models/movie.model'; // Make sure this model exists and is correct\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private moviesUrl = 'assets/movies.json';\n\n  constructor(private http: HttpClient) {}\n\n  getMovies(): Observable<Movie[]> {\n    return this.http.get<Movie[]>(this.moviesUrl);\n  }\n\n  getMovieById(id: number): Observable<Movie> {\n    return this.getMovies().pipe(\n      map(movies => movies.find(movie => movie.id === id)) // Assuming each movie has a unique 'id' property\n    );\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,SAAS,GAAG,oBAAoB;EAED;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,SAAS,CAAC;EAC/C;EAEAG,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACH,SAAS,EAAE,CAACI,IAAI,CAC1BC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC,CAAC;KACtD;EACH;EAAC,QAAAM,CAAA,G;qBAbUb,YAAY,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZlB,YAAY;IAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}