{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let SeatSelectionComponent = class SeatSelectionComponent {\n  constructor(router, route, location) {\n    this.router = router;\n    this.route = route;\n    this.location = location;\n    this.seatMap = [];\n    this.selectedSeats = [];\n    this.initializeNavigationState();\n    this.seatMap = this.generateSeatMap(10, 12); // Example: 10 rows, 12 seats per row\n  }\n\n  ngOnInit() {}\n  initializeNavigationState() {\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation && navigation.extras && navigation.extras.state) {\n      const state = navigation.extras.state;\n      this.movie = state.movie;\n      this.cinema = state.cinema;\n      this.date = state.date;\n      this.showtime = state.showtime;\n    }\n  }\n  generateSeatMap(rows, cols) {\n    let map = [];\n    for (let i = 0; i < rows; i++) {\n      let row = [];\n      for (let j = 0; j < cols; j++) {\n        row.push({\n          booked: Math.random() < 0.2,\n          label: String.fromCharCode(65 + i) + (j + 1)\n        });\n      }\n      map.push(row);\n    }\n    return map;\n  }\n  toggleSeat(rowIndex, seatIndex) {\n    if (this.seatMap[rowIndex][seatIndex].booked) return;\n    let seatFound = this.selectedSeats.find(s => s.row === rowIndex && s.col === seatIndex);\n    if (seatFound) {\n      this.selectedSeats = this.selectedSeats.filter(s => s !== seatFound);\n    } else {\n      this.selectedSeats.push({\n        row: rowIndex,\n        col: seatIndex\n      });\n    }\n  }\n  isSelectedSeat(rowIndex, seatIndex) {\n    return !!this.selectedSeats.find(s => s.row === rowIndex && s.col === seatIndex);\n  }\n  confirmSelection() {\n    // Process selection confirmation\n    console.log('Selected seats:', this.selectedSeats);\n    this.router.navigate(['/confirmation']);\n  }\n  goBack() {\n    this.location.back();\n  }\n};\nSeatSelectionComponent = __decorate([Component({\n  selector: 'app-seat-selection',\n  templateUrl: './seat-selection.component.html',\n  styleUrls: ['./seat-selection.component.css']\n})], SeatSelectionComponent);","map":{"version":3,"names":["Component","SeatSelectionComponent","constructor","router","route","location","seatMap","selectedSeats","initializeNavigationState","generateSeatMap","ngOnInit","navigation","getCurrentNavigation","extras","state","movie","cinema","date","showtime","rows","cols","map","i","row","j","push","booked","Math","random","label","String","fromCharCode","toggleSeat","rowIndex","seatIndex","seatFound","find","s","col","filter","isSelectedSeat","confirmSelection","console","log","navigate","goBack","back","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\seat-selection\\seat-selection.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\ninterface Movie {\n  title: string;\n}\n\ninterface Cinema {\n  name: string;\n  showtimes: string[];\n}\n\ninterface Seat {\n  booked: boolean;\n  label: string;\n}\n\n@Component({\n  selector: 'app-seat-selection',\n  templateUrl: './seat-selection.component.html',\n  styleUrls: ['./seat-selection.component.css']\n})\nexport class SeatSelectionComponent implements OnInit {\n  movie!: Movie;\n  cinema!: Cinema;\n  date!: Date;\n  showtime!: string;\n  seatMap: Seat[][] = [];\n  selectedSeats: { row: number, col: number }[] = [];\n\n  constructor(private router: Router, private route: ActivatedRoute, private location: Location) {\n    this.initializeNavigationState();\n    this.seatMap = this.generateSeatMap(10, 12); // Example: 10 rows, 12 seats per row\n  }\n\n  ngOnInit(): void {}\n\n  initializeNavigationState() {\n    const navigation = this.router.getCurrentNavigation();\n    if (navigation && navigation.extras && navigation.extras.state) {\n      const state = navigation.extras.state as any;\n      this.movie = state.movie;\n      this.cinema = state.cinema;\n      this.date = state.date;\n      this.showtime = state.showtime;\n    }\n  }\n\n  generateSeatMap(rows: number, cols: number): Seat[][] {\n    let map = [];\n    for (let i = 0; i < rows; i++) {\n      let row = [];\n      for (let j = 0; j < cols; j++) {\n        row.push({ booked: Math.random() < 0.2, label: String.fromCharCode(65 + i) + (j + 1) });\n      }\n      map.push(row);\n    }\n    return map;\n  }\n\n  toggleSeat(rowIndex: number, seatIndex: number): void {\n    if (this.seatMap[rowIndex][seatIndex].booked) return;\n    let seatFound = this.selectedSeats.find(s => s.row === rowIndex && s.col === seatIndex);\n    if (seatFound) {\n      this.selectedSeats = this.selectedSeats.filter(s => s !== seatFound);\n    } else {\n      this.selectedSeats.push({ row: rowIndex, col: seatIndex });\n    }\n  }\n\n  isSelectedSeat(rowIndex: number, seatIndex: number): boolean {\n    return !!this.selectedSeats.find(s => s.row === rowIndex && s.col === seatIndex);\n  }\n\n  confirmSelection(): void {\n    // Process selection confirmation\n    console.log('Selected seats:', this.selectedSeats);\n    this.router.navigate(['/confirmation']);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}