{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MovieService {\n  constructor(http) {\n    this.http = http;\n    this.moviesUrl = 'assets/movies.json'; // Adjust the path as necessary\n  }\n  // Make sure this method is correctly declared and implemented\n  getMovies() {\n    return this.http.get(this.moviesUrl);\n  }\n  static #_ = this.ɵfac = function MovieService_Factory(t) {\n    return new (t || MovieService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MovieService,\n    factory: MovieService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MovieService","constructor","http","moviesUrl","getMovies","get","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\MS\\SWE-632\\cinebook\\cinebook_app\\src\\app\\services\\movie.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Movie } from '../models/movie.model';  // Correct the import path if it's incorrect\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieService {\n  private moviesUrl = 'assets/movies.json';  // Adjust the path as necessary\n\n  constructor(private http: HttpClient) {}\n\n  // Make sure this method is correctly declared and implemented\n  getMovies(): Observable<Movie[]> {\n    return this.http.get<Movie[]>(this.moviesUrl);\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,SAAS,GAAG,oBAAoB,CAAC,CAAE;EAEJ;EAEvC;EACAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAU,IAAI,CAACF,SAAS,CAAC;EAC/C;EAAC,QAAAG,CAAA,G;qBARUN,YAAY,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZX,YAAY;IAAAY,OAAA,EAAZZ,YAAY,CAAAa,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}